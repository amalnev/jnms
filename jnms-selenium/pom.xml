<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>jnms</artifactId>
        <groupId>ru.amalnev</groupId>
        <version>0.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>jnms-selenium</artifactId>

    <name>jnms-selenium</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.10</version>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.141.59</version>
        </dependency>
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.1-jre</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- This is a custom build step required to generate the language parser in Java from YACC file -->
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>1.6.0</version>
                <executions>

                    <!-- Parser generation is performed in generate-sources phase by invoking BYACC/J parser generator-->
                    <execution>
                        <id>Generate parser with BYACC/J</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/main/java/ru/amalnev/selenium/language</workingDirectory>
                            <executable>${project.basedir}/byacc/yacc</executable>
                            <arguments>
                                <argument>-Jpackage=ru.amalnev.selenium.language</argument>
                                <argument>-Jthrows=ParserException,IOException</argument>
                                <argument>-Jnorun</argument>
                                <argument>${project.basedir}/src/main/yacc/selenium.y</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- Generated sources containing language parser implementation are cleaned up during clean phase -->
                    <execution>
                        <id>Delete parser sources</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}/src/main/java/ru/amalnev/selenium/language</workingDirectory>
                            <executable>rm</executable>
                            <arguments>
                                <argument>Parser.java</argument>
                                <argument>ParserVal.java</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
